# vim: filetype=bash
set +o errexit

colored() {
    color="$1"
    value="$2"

    color_code="30"
    case "$color" in
        red)
            color_code="31"
            ;;
        green)
            color_code="32"
            ;;
        blue)
            color_code="34"
            ;;
    esac

    echo -e "\e[${color_code};1m$value\e[0m"
}

handle_error() {
    # shellcheck disable=SC2181
    error_code="$?"
    msg_if_success="$1"
    msg_if_failure="$2"
    if [ "$error_code" = "0" ]; then 
        colored green "$msg_if_success"
    else
        colored red "$msg_if_failure" 
        exit 1
    fi
}

# ----------------------------------------------------------------
# --- Get input options if not provided as flags
read -r -p "Update flake? [Y/n]: " update_flake_ui
if [ "$update_flake_ui" = "Y" ]; then
    update_flake="true"
else
    update_flake="false"
fi

read -r -p "Commit everything? [Y/n]: " commit_everything_ui
if [ "$commit_everything_ui" = "Y" ]; then
    commit_everything="true"
    read -r -p "Commit message: " commit_message
else
    commit_everything="false"
fi

read -r -p "Switch systems? [Y/n]: " switch_systems_ui
if [ "$switch_systems_ui" = "Y" ]; then
    switch_systems="true"
    colored blue "Priming sudo command..."
    sudo true
else
    switch_systems="false"
fi
# ----------------------------------------------------------------


# Go to flake directory
flakedir="${1-}"
if [ "$flakedir" = "" ]; then
    flakedir="$HOME/src/nix-dotfiles"
fi
cd "$flakedir"
handle_error "Went to directory: $flakedir" "Failed to cd to flake dir: $flakedir"

if [ "$update_flake" = "true" ]; then
    colored blue "Updating flake..."
    nix flake update 
    handle_error "Flake updated!" "Failed to update flake"
fi

if [ "$commit_everything" = "true" ]; then
    git add .
    git commit -m "$commit_message"
fi

colored blue "Rebuilding..."

nixos-rebuild build --flake .#default
handle_error "Rebuild successful!" "Failed to rebuild system"

colored blue "nix store diff-closures output:"
nix store diff-closures /run/current-system ./result

colored blue "nvd diff output:"
nvd diff /run/current-system ./result

if [ "$switch_systems" = "true" ]; then
    colored blue "Switching systems..."
    
    sudo nix-env --profile /nix/var/nix/profiles/system --set ./result && \
    sudo /nix/var/nix/profiles/system/bin/switch-to-configuration switch

    handle_error "System switch successful!" "Failed to switch systems"
fi
