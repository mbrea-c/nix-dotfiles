colored() {
    color="$1"
    value="$2"

    color_code="30"
    case "$color" in
        red)
            color_code="31"
            ;;
        green)
            color_code="32"
            ;;
        blue)
            color_code="34"
            ;;
    esac

    echo -e "\e[${color_code};1m$value\e[0m"
}

# Go to flake directory
flakedir="${1-}"
if [ "$flakedir" = "" ]; then
    flakedir="$HOME/src/nix-dotfiles"
fi
cd "$flakedir" || (colored red "Failed to cd to flake dir: $flakedir" && exit 1)

read -r -p "Update flake? [Y/n]: " update_flake
if [ "$update_flake" = "Y" ]; then
    colored blue "Updating flake..."
    nix flake update && colored green "Flake updated!" || (colored red "Failed to update flake" && exit 1)
fi
read -r -p "Commit everything? [Y/n]: " commit_everything
if [ "$commit_everything" = "Y" ]; then
    read -r -p "Commit message: " commit_message
    git add .
    git commit -m "$commit_message"
fi
colored blue "Rebuilding..."
nixos-rebuild build --flake .#default && colored green "Rebuild successful!" || (colored red "Failed to rebuild system" && exit 1)
nvd diff /run/current-system result
read -r -p "Switch systems? [Y/n]: " switch_systems
if [ "$switch_systems" = "Y" ]; then
    colored blue "Switching systems..."
    sudo nix-env --profile /nix/var/nix/profiles/system --set ./result && \
    sudo /nix/var/nix/profiles/system/bin/switch-to-configuration switch && \
    colored green "System switch successful!" || (colored red "Failed to switch systems" && exit 1)
fi
